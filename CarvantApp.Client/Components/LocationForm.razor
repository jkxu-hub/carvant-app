<MudDialog>
    <TitleContent>
        Location Form
    </TitleContent>
    <DialogContent>
        <EditForm Model="Location" OnValidSubmit="OnSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div>
                <label>Zip:</label>
                <InputText @bind-Value="Location.Zip" class="form-control" />
            </div>
            <div>
                <label>City:</label> 
                <InputText @bind-Value="Location.City" class="form-control" />
            </div>
            <div>
                <label>State:</label> 
                <InputText @bind-Value="Location.State" class="form-control" />
            </div>
            <div>
                <label>County:</label> 
                <InputText @bind-Value="Location.County" class="form-control" />
            </div>
            <div>
                <label>Latitude:</label> 
                <InputNumber @bind-Value="Location.Latitude" class="form-control" />
            </div>
            <div>
                <label>Longitude:</label> 
                <InputNumber @bind-Value="Location.Longtitude" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary mt-2">Submit</button>
        </EditForm>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }
    [Parameter] 
    public LocationViewModel Location { get; set; }
    [Parameter]
    public EventCallback<LocationViewModel> HandleValidSubmit { get; set; }


    private async Task OnSubmit()
    {
        if (HandleValidSubmit.HasDelegate)
        {
            await HandleValidSubmit.InvokeAsync(Location);
        }
        Location = new LocationViewModel();
        StateHasChanged();
    }
}